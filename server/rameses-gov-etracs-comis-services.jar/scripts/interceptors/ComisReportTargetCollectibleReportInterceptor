import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*

class ComisReportTargetCollectibleReportInterceptor {
	@DataContext('vw_application')
	def vw_app;
	
	@After(pattern="FormReportService.getParameters", eval="#{args[0].reportid == 'comis_target_collectible'}", index=100)
	public void getParameters(def evt) {
		def args  = evt.args[0];
		def params = [
			[type: 'integer', caption: 'Year', name: 'year'],
		];
		evt.result.parameters = params;
	}	

	@After(pattern="FormReportService.getData", eval="#{args[0].reportid == 'comis_target_collectible'}", index=100)
	public void getData(def evt) {
		def params  = evt.args[0].parameters;
		
		def filters = [];
		filters << ' (appyear = :year OR ( dtexpiry >= :startdate AND dtexpiry < :enddate AND renewable = 1)) ';
		params.startdate = params.year + '-01-01';
		params.enddate = (params.year+1) + '-01-01';

		filters << " state NOT IN ('DRAFT', 'RENEWED', 'CLOSED') "
		
		def where = filters.join( ' AND ');
		def list = vw_app.where([where, params]).list();
		if (list) {
			list[0].query = [year: params.year];
		}
		evt.result.data = list;
		
	}	
}