import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*

class ComisReportDeceasedListInterceptor {
	@Service('ComisUtil')
	def util;

	@DataContext('deceased')
	def em_deceased;


	@After(pattern="FormReportService.getData", eval="#{args[0].reportid == 'comis_list_of_deceased'}", index=100)
	public void getData(def evt) {
		def params  = evt.args[0].parameters;

		params.query = [period: 'ALL', age: 'ALL'];
		
		params.filters = [];
		params.filters << ' state = :state ';
		params.state = 'APPROVED';
		util.buildStartEndDateFilter(params);
		util.buildAgeGroupFilter(params);
		util.buildLguFilter(params);
		
		def where = params.filters.join(' AND ');
		def list = em_deceased.where([where, params]).orderBy('name').list();
		if (list) {
			list.each{
				it.age = util.toAgeStr(it.age, it.agetype);
				it.address = it.address + ', ' + it.lgu;
			}
			list[0].query = params.query;
		}

		evt.result.data = list;
	}
}