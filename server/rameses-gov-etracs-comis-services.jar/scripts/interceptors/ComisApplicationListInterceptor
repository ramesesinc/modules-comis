import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*

class ComisApplicationListInterceptor {

	@After(pattern="QueryService.getNodeList", eval="#{args[0]._schemaname=='application'}") 
	public void getNodeList( evt ) {
		def result = evt.result
		result << [id: "DRAFT", title: "Draft"]
		result << [id: "FORAPPROVAL", title: "For Approval"]
		result << [id: "FORPAYMENT", title: "For Payment"]
		result << [id: "FORRELEASE", title: "For Release"]
		result << [id: "ACTIVE", title: "Active"]
		result << [id: "EXPIRED", title: "Expired"]
		result << [id: "RENEWED", title: "Renewed"]
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'application' }")
	public void getList(def evt) {
		def o = evt.args[0];
		if( !o.node?.id ) return;

		def m   = [state: o.node.id];
		def str = " state = :state ";

		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		}
	}	
}